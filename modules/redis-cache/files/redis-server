#! /bin/sh
### BEGIN INIT INFO
# Provides:		redis-server
# Required-Start:	$syslog $remote_fs
# Required-Stop:	$syslog $remote_fs
# Should-Start:		$local_fs
# Should-Stop:		$local_fs
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	redis-server - Persistent key-value db
# Description:		redis-server - Persistent key-value db
### END INIT INFO


PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/redis-server
DAEMON_ARGS=/etc/redis/redis.conf
NAME=redis-server
DESC=redis-server

RUNDIR=/var/run/redis
NUMPROCESSORS=`cat /proc/cpuinfo  |grep processor |wc -l`
BASE_PORT=6378

test -x $DAEMON || exit 0

if [ -r /etc/default/$NAME ]
then
	. /etc/default/$NAME
fi

set -e

case "$1" in
  start)
      for i in $(seq 1 $NUMPROCESSORS); do
        PORT=$((BASE_PORT + i))
        PIDFILE=$RUNDIR/redis-server-$PORT.pid
        CURR_ARGS="$DAEMON_ARGS --port $PORT --pidfile $PIDFILE"
 
	echo -n "Starting $DESC instance #$i: "
	mkdir -p $RUNDIR
	touch $PIDFILE
	chown redis:redis $RUNDIR $PIDFILE
	chmod 755 $RUNDIR

	if [ -n "$ULIMIT" ]
	then
		ulimit -n $ULIMIT
	fi

	if start-stop-daemon --start --quiet --umask 007 --pidfile $PIDFILE --chuid redis:redis --exec $DAEMON -- $CURR_ARGS 
	then
		echo "$NAME."
	else
		echo "failed"
	fi
       done
	;;
  stop)
      for i in $(seq 1 $NUMPROCESSORS); do
        PIDFILE=$RUNDIR/redis-server-$((BASE_PORT + i)).pid
	echo -n "Stopping $DESC instance #$i: "
	if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON
	then
		echo "$NAME."
	else
		echo "failed"
	fi
	rm -f $PIDFILE
	sleep 1
       done
	;;

  restart|force-reload)
	${0} stop
	${0} start
	;;

  status)
      for i in $(seq 1 $NUMPROCESSORS); do
        PIDFILE=$RUNDIR/redis-server-$((BASE_PORT + i)).pid
	echo -n "$DESC instance #$i is "
	if start-stop-daemon --stop --quiet --signal 0 --name ${NAME} --pidfile ${PIDFILE}
	then
		echo "running"
	else
		echo "not running"
		exit 1
	fi
      done
	;;

  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
